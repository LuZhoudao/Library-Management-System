package myOracle;

import java.util.Objects;
import java.util.Scanner;
import java.util.Vector;

public class PATRON {
    public String PATRON_ID;
    public String USER_PASSWORD;
    public String PATRON_NAME;
    public String AGE;
    public boolean ACTIVITY_STATE=true;
    public String E_MAIL;
    public String GENDER;
    public String ADDRESS;
    public String ILLEGAL_TYPE;
    public String PHONE;

    private static boolean flag=false;


    public PATRON(String PATRON_ID, String USER_PASSWORD, String PATRON_NAME, String AGE, boolean ACTIVITY_STATE, String e_MAIL, String GENDER, String ADDRESS, String ILLEGAL_TYPE, String PHONE) {
        this.PATRON_ID = PATRON_ID;
        this.USER_PASSWORD = USER_PASSWORD;
        this.PATRON_NAME = PATRON_NAME;
        this.AGE = AGE;
        this.ACTIVITY_STATE = ACTIVITY_STATE;
        E_MAIL = e_MAIL;
        this.GENDER = GENDER;
        this.ADDRESS = ADDRESS;
        this.ILLEGAL_TYPE = ILLEGAL_TYPE;
        this.PHONE = PHONE;
    }
    public PATRON() {};

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        PATRON patron = (PATRON) o;
        return PATRON_ID.equals(patron.PATRON_ID);
    }

    @Override
    public int hashCode() {
        return Objects.hash(PATRON_ID);
    }

    public static String generatePATRON_ID() {
        String result=Tools.Random_int(8);
        return result+"p";
    }

    public static PATRON getFromInput_Instance() {
        PATRON patron=new PATRON();
        patron.ACTIVITY_STATE = true;
        if(flag){return null;}
        patron.PATRON_ID = generatePATRON_ID();
        System.out.println("Your id is generated by system: remember it!\n" + patron.PATRON_ID);
        patron.USER_PASSWORD = patron.getFromInput_USER_PASSWORD ();
        if(patron.USER_PASSWORD=="*"){return null;}
        patron.PATRON_NAME = patron.getFromInput_PATRON_NAME ();
        if(patron.PATRON_NAME=="*"){return null;}
        patron.AGE = patron.getFromInput_AGE ();
        if(patron.AGE=="*"){return null;}
        patron.E_MAIL = patron.getFromInput_E_MAIL();
        if(patron.E_MAIL=="*")return null;
        patron.GENDER = patron.getFromInput_GENDER();
        if(patron.GENDER=="*")return null;
        System.out.println("Do you want to input your address. That is optional! Enter 0--not input, 1--input");
        int num = Tools.getIntByInput(1);
        patron.ADDRESS = (num == 1 ? patron.getFromInput_ADDRESS() : null);
        if(patron.ADDRESS != null && patron.ADDRESS=="*") return null;
        patron.ILLEGAL_TYPE = null;
        patron.PHONE = patron.getFromInput_PHONE();
        if(patron.PATRON_NAME=="*")return null;
        return patron;
    }

    public static boolean isValidPATRON_ID(String PATRON_ID) {
        if(PATRON_ID.length()!=9){
            return false;
        }
        for(int i=0;i<8;i++){
            if(PATRON_ID.charAt(i)<'0'||PATRON_ID.charAt(i)>'9'){
                return false;
            }
        }
        if(PATRON_ID.charAt(8)!='p'){
            return false;
        }
        return true;
    }

    public static String getFromInput_PATRON_ID() {
        Scanner input=new Scanner(System.in);
        System.out.println("Please input your PATRON_ID such as 123456789p(input * to quit)");
        String result=input.nextLine();
        while(!isValidPATRON_ID(result)){
            System.out.println(result);
            if(result.equals("*")){
                return "*";
            }
            System.out.println(result);
            System.out.println("invalid input please input again");
            result=input.nextLine();
        }
        return result;
    }

    public static boolean isValidUSER_PASSWORD(String USER_PASSWORD) {
        if(!Tools.is_Valid_String(6,15,USER_PASSWORD,false)){
            return false;
        }
//        if(USER_PASSWORD.length()<=9){
//            System.out.println("weak password");
//            return true;
//        }
//        if(USER_PASSWORD.length()<=12){
//            System.out.println("Median password");
//            return true;
//        }
//        if(USER_PASSWORD.length()<=15){
//            System.out.println("Strong password");
//            return true;
//        }
        return true;
    }

    public static String getFromInput_USER_PASSWORD() {
        Scanner input=new Scanner(System.in);
        System.out.println("Please input your USER_PASSWORD (6 to 15 digits) such as 123456789(input * to quit)");
        String result=input.nextLine();
        while(!isValidUSER_PASSWORD(result)){
            if(result.equals("*")){
                return "*";
            }
            System.out.println("invalid input please input again");
            result=input.nextLine();
        }
        return result;
    }

    public static boolean isValidPATRON_NAME(String PATRON_NAME) {
        if(!Tools.is_Valid_String(1,30,PATRON_NAME,false)){
            return false;
        }
        return true;
    }

    public static String getFromInput_PATRON_NAME() {
        Scanner input=new Scanner(System.in);
        System.out.println("Please input the your PATRON_NAME(1 to 30 characters) such as FRANKLIN(input * to quit)");
        String result=input.nextLine();
        while(!isValidPATRON_NAME(result)){
            if(result.equals("*")){
                return "*";
            }
            System.out.println("invalid input please input again");
            result=input.nextLine();
        }
        return result;
    }

    public static boolean isValidAGE(String AGE) {
        if(AGE.length()>2){
            return false;
        }
        for(int i=0;i<AGE.length();i++) {
            if (AGE.charAt(i) > '9' || AGE.charAt(i) < '0') {
                return false;
            }
        }
        return true;
    }

    public static String getFromInput_AGE() {
        Scanner input=new Scanner(System.in);
        System.out.println("Please input your age such as 12(input * to quit)");
        String result=input.nextLine();
        while(!isValidAGE(result)){
            if(result.equals("*")){
                return "*";
            }
            System.out.println("invalid input please input again");
            result=input.nextLine();
        }
        return result;
    }

    public static boolean isValidACTIVITY_STATE(String ACTIVITY_STATE) {
        ACTIVITY_STATE=ACTIVITY_STATE.toLowerCase();
        if(ACTIVITY_STATE.equals("true") || ACTIVITY_STATE.equals("false") || ACTIVITY_STATE.equals("*")){
            return true;
        }
        return false;
    }

    public static boolean getFromInput_ACTIVITY_STATE() {
        System.out.println("input the STATE (true / false):[input * quit]");
        Scanner input=new Scanner(System.in);
        String result = input.nextLine();
        while(!isValidACTIVITY_STATE(result)){
            System.out.println("the input is invalid,please input again:(input * quit)");
            result=input.nextLine();
        }
        if(result.equals("*")){
            flag=true;
            return false;
        }
        boolean res=true;
        try{
            res = Boolean.parseBoolean(result);
        }
        catch(NumberFormatException e){

        }
        return res;
    }

    public static boolean isValidE_MAIL(String E_MAIL) {
        if(!Tools.is_Valid_String(20,30,E_MAIL,false)){
            return false;
        }
        return true;
    }

    public static String getFromInput_E_MAIL() {
        System.out.println("Please input your E_MAIL(20 to 30 characters) such as 1234567@POLYU.EDU.HK(input * to quit)");
        Scanner input=new Scanner(System.in);
        String result=input.nextLine();
        while(!isValidE_MAIL(result)){
            if(result.equals("*")){
                return "*";
            }
            System.out.println("invalid input please input again");
            result=input.nextLine();
        }
        return result;
    }

    public static boolean isValidGENDER(String GENDER) {
        String res=GENDER.toLowerCase();
        if(res.equals("male")||res.equals("female")){
            return true;
        }
        return false;
    }

    public static String getFromInput_GENDER() {
        Scanner input=new Scanner(System.in);
        System.out.println("Please input your GENDER such as (male/female)(input * to quit)");
        String result=input.nextLine();
        while(!isValidGENDER(result)){
            if(result.equals("*")){
                return "*";
            }
            System.out.println("invalid input please input again");
            result=input.nextLine();
        }
        return result;
    }

    public static boolean isValidADDRESS(String ADDRESS) {
        if(!Tools.is_Valid_String(1,50,ADDRESS,true)){
            return false;
        }
        return true;
    }

    public static String getFromInput_ADDRESS() {
        Scanner input=new Scanner(System.in);
        System.out.println("Please input your ADDRESS(1:50 characters) such as HONG HAM(input * to quit)");
        String result=input.nextLine();
        while(!isValidADDRESS(result)){
            if(result.equals("*")){
                return "*";
            }
            System.out.println("invalid input please input again");
            result=input.nextLine();
        }
        return result;
    }

    public static boolean isValidILLEGAL_TYPE(String ILLEGAL_TYPE) {
        if(!Tools.is_Valid_String(1,30,ILLEGAL_TYPE,true)){
            return false;
        }
        return true;
    }

    public static String getFromInput_ILLEGAL_TYPE() {
        Scanner input=new Scanner(System.in);
        System.out.println("Please input your ILLEGAL_TYPE such as (destroyed the book)(input * to quit)");
        String result=input.nextLine();
        while(!isValidILLEGAL_TYPE(result)){
            if(result.equals("*")){
                return "*";
            }
            System.out.println("invalid input please input again");
            result=input.nextLine();
        }
        return result;
    }

    public static boolean isValidPHONE(String PHONE) {
        if(!Tools.is_Valid_String(8,8,PHONE,false)){
            return false;
        }
        return true;
    }

    public static String getFromInput_PHONE() {
        Scanner input = new Scanner(System.in);
        System.out.println("Please input your PHONE such as 88888888(input * to quit)");
        String result = input.nextLine();
        while (!isValidPHONE(result)) {
            if (result == "*") {
                return "*";
            }
            System.out.println("invalid input please input again");
            result = input.nextLine();
        }
        return result;
    }



    //!!! 打印的时候不打印密码。！！！

    public static void printObject(PATRON o) {
        String PATRON_ID = String.format("%-11s",o.PATRON_ID).replace(' ',' ');
        String PATRON_NAME= String.format("%-32s",o.PATRON_NAME.strip()).replace(' ',' ');
        String AGE = String.format("%-4s",o.AGE).replace(' ',' ');
        String ACTIVITY_STATE =String.format("%-16s",o.ACTIVITY_STATE).replace(' ',' ');
        String E_MAIL = String.format("%-32s",o.E_MAIL.strip()).replace(' ',' ');
        String GENDER = String.format("%-8s",o.GENDER.strip()).replace(' ',' ');
        String ADDRESS;
        if(o.ADDRESS != null){
            ADDRESS =String.format("%-52s",o.ADDRESS.strip()).replace(' ',' ');
        }
        else{
            ADDRESS =String.format("%-52s", "null").replace(' ',' ');
        }
        String ILLEGAL_TYPE;
        if(o.ILLEGAL_TYPE != null){
            ILLEGAL_TYPE =String.format("%-32s",o.ILLEGAL_TYPE.strip()).replace(' ',' ');
        }
        else{
            ILLEGAL_TYPE =String.format("%-32s", "null").replace(' ',' ');
        }
        String PHONE = String.format("%-10s",o.PHONE).replace(' ',' ');;
        System.out.print(PATRON_ID);
        System.out.print(PATRON_NAME);
        System.out.print(AGE);
        System.out.print(ACTIVITY_STATE);
        System.out.print(E_MAIL);
        System.out.print(GENDER);
        System.out.print(ADDRESS);
        System.out.print(ILLEGAL_TYPE);
        System.out.println(PHONE);
    }

    public static void printTable(Vector<PATRON> ivec) {
        System.out.println("PATRON");
        System.out.print("    ");
        System.out.print(String.format("%-11s","PATRON_ID").replace(' ',' '));
        System.out.print(String.format("%-32s","PATRON_NAME").replace(' ',' '));
        System.out.print(String.format("%-4s","AGE").replace(' ',' '));
        System.out.print(String.format("%-16s","ACTIVITY_STATE").replace(' ',' '));
        System.out.print(String.format("%-32s","E_MAIL").replace(' ',' '));
        System.out.print(String.format("%-8s","GENDER").replace(' ',' '));
        System.out.print(String.format("%-52s","ADDRESS").replace(' ',' '));
        System.out.print(String.format("%-32s","ILLEGAL_TYPE").replace(' ',' '));
        System.out.println(String.format("%-10s","PHONE").replace(' ',' '));
        for(int i = 0, m = 1; i < ivec.size(); i++){
            System.out.print("(" + m++ + "" + ")");
            System.out.println(Tools.getNChar("-", Tools.LEN));
            System.out.print("    ");
            if(ivec.get(i) == null){
                System.out.println("This table is empty");
            }
            else{
                ivec.get(i).printObject(ivec.get(i));
            }
        }
    }
}

